{"version":3,"sources":["components/Header.js","components/Footer.js","components/SideBar.js","components/CustomerDetails.js","App.js","index.js"],"names":["Header","id","Footer","url","network","bgColor","style","height","width","SideBar","customers","setSelectedCustomer","selectedCustomer","className","map","customer","onClick","firstName","lastName","toString","CustomerDetails","transfer","amount","setAmount","receiverId","setReceiverId","phone","email","currentBalance","onSubmit","htmlFor","defaultValue","required","value","onChange","e","parseInt","target","disabled","type","step","App","useState","setCustomers","useEffect","api_url","console","log","axios","get","then","data","selected","length","catch","err","preventDefault","receiver","find","c","window","confirm","newSenderBalance","newReceiverBalance","alert","dotenv","config","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.5ee44a8d.chunk.js","sourcesContent":["const Header = () => {\r\n    return (\r\n        <div id=\"header\">\r\n            <h1>Basic Banking App</h1>\r\n        </div>\r\n    )\r\n}\r\nexport default Header\r\n","import { SocialIcon } from 'react-social-icons';\r\nconst  Footer= () => {\r\n    return (\r\n        <div id=\"footer\">\r\n            <p>By</p>\r\n            <h3><strong>Verdiane DADA</strong> </h3>\r\n            <SocialIcon url=\"https://www.linkedin.com/in/verdianedada\" network=\"linkedin\" bgColor=\"white\" style={{ height: 33, width: 33}}/>\r\n            <SocialIcon url=\"https://github.com/verdianeDada\" bgColor=\"white\"  network=\"github\" style={{ height: 33, width: 33 }}/>\r\n            <SocialIcon url=\"mailto:dada.verdiane@gmail.com\"  bgColor=\"white\" network=\"mailto\" style={{ height: 33, width: 33 }}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n export default Footer","const  SideBar= ({customers, setSelectedCustomer, selectedCustomer }) => {\r\n    return (\r\n        <div id=\"sidebar\">\r\n            <div className=\"title\"><h2  > Customers' List</h2></div>\r\n            <div id=\"customers-list\">\r\n                {customers.map( customer =>\r\n                     <div key={customer.id.toString()} className={customer.id===selectedCustomer.id ? \"name selected\":\"name\"} \r\n                        onClick = {()=> {setSelectedCustomer(customer)}}>\r\n                        <p>{customer.firstName} {customer.lastName}</p>\r\n                     </div>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n export default SideBar","\r\nconst CustomerDetails = ({ selectedCustomer, customers, transfer, amount, setAmount, receiverId, setReceiverId }) => {\r\n    return (\r\n        <div id=\"customer-details\">\r\n            {selectedCustomer.id === -1\r\n                ? <div><h2>Not Customers Yet! Please add some</h2></div>\r\n                : <>\r\n                    <div className=\"section\">\r\n                        <div className=\"header\"><h2 className=\"center\" >Customer's information</h2></div>\r\n                        <div className=\"content\">\r\n                            <p>First name: <strong className=\"capitalize\">{selectedCustomer.firstName}</strong></p>\r\n                            <p>Last name: <strong className=\"capitalize\">{selectedCustomer.lastName}</strong></p>\r\n                            <p>Phone number: <strong>{selectedCustomer.phone}</strong></p>\r\n                            <p>Email address: <strong>{selectedCustomer.email}</strong></p>\r\n                            <p>currentBalance: <strong>$ {selectedCustomer.currentBalance}</strong></p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section\">\r\n                        <div className=\"header\">\r\n                            <h2 className=\"center\" >New transaction</h2>\r\n                        </div>\r\n                        <div className=\"content\">\r\n                            <form onSubmit={transfer}>\r\n                                <div id=\"fill\">\r\n                                    <div>\r\n                                        <label htmlFor=\"receiver\">Receiver: </label>\r\n                                        <select defaultValue=\"\" required value={receiverId} onChange={(e) => setReceiverId(parseInt(e.target.value))} id=\"receiver\">\r\n                                            <option disabled value=\"\" >Select a receiver ...</option>\r\n                                            {\r\n                                                customers.map(customer => {\r\n                                                    if (customer.id !== selectedCustomer.id)\r\n                                                        return <option value={customer.id} key={customer.id} >{`${customer.firstName} ${customer.lastName}`}</option>\r\n                                                    else\r\n                                                        return null;\r\n                                                })}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div>\r\n                                        <label htmlFor=\"amount\">Amount ($):</label>\r\n                                        <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} id=\"amount\" step=\"50\" />\r\n                                    </div></div>\r\n                                <div id=\"submit\">\r\n                                    <button type=\"submit\">Transfer</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerDetails","import { useState, useEffect } from 'react'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport SideBar from './components/SideBar'\r\nimport CustomerDetails from './components/CustomerDetails'\r\nimport axios from 'axios'\r\n\r\n\r\nconst App = () => {\r\n\r\n\r\n\r\n  const [customers, setCustomers] = useState([])\r\n\r\n\r\n\r\n  const [selectedCustomer, setSelectedCustomer] = useState({})\r\n  const [receiverId, setReceiverId] = useState()\r\n  const [amount, setAmount] = useState(100)\r\n\r\n  // loading data from AWS API Gateway\r\n  useEffect(() => {\r\n    const api_url = \"https://wkequqyb56.execute-api.us-east-1.amazonaws.com/dev\"\r\n    console.log(`${api_url}/customers`)\r\n    axios\r\n      .get(`${api_url}/customers`)\r\n      .then(data => {\r\n        \r\n        \r\n        const customers = data.data.customers\r\n        setCustomers(customers)\r\n        console.log('customers set')\r\n        // setting the selected customer whose details should be viewed by default\r\n        let selected = customers.length > 0 ? customers[0] : { id: -1 }\r\n        setSelectedCustomer(selected)\r\n      })\r\n      .catch(err => console.log(err)\r\n      )\r\n\r\n  }, [])\r\n\r\n  const transfer = (e) => {\r\n    e.preventDefault()\r\n    const receiver = customers.find(c => c.id === receiverId)\r\n    console.log(receiverId)\r\n    if (window.confirm(`Do you want to transfer $ ${amount} to ${receiver.firstName} ${receiver.lastName} ?`)) {\r\n\r\n      if (receiver) {\r\n        console.log(`lets tranfer ${amount} to ${receiver.firstName}`)\r\n        const newSenderBalance = selectedCustomer.currentBalance - amount\r\n        const newReceiverBalance = receiver.currentBalance + amount\r\n        setCustomers(customers.map(customer => {\r\n          // selectedCustomer = sender\r\n\r\n          if (customer.id === receiverId) {\r\n\r\n            return { ...customer, currentBalance: newReceiverBalance }\r\n          }\r\n          else if (customer.id === selectedCustomer.id)\r\n            return { ...customer, currentBalance: newSenderBalance }\r\n          else\r\n            return customer\r\n        }))\r\n        setSelectedCustomer({ ...selectedCustomer, currentBalance: newSenderBalance })\r\n        // setReceiverId()\r\n        alert(`Successful transfer of ${amount} to ${receiver.firstName} ${receiver.lastName}`)\r\n      }\r\n      else\r\n        alert(\"Operation failed! This receiver is not longer a customer of this bank\")\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Header />\r\n      <SideBar setReceiverId={setReceiverId} selectedCustomer={selectedCustomer} setSelectedCustomer={setSelectedCustomer} customers={customers} />\r\n      <CustomerDetails amount={amount} setAmount={setAmount} receiverId={receiverId} setReceiverId={setReceiverId} transfer={transfer} selectedCustomer={selectedCustomer} customers={customers} />\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n\r\nimport App from './App';\r\nimport './index.css'\r\nimport dotenv from 'dotenv'\r\n\r\n// loading ../env file variables\r\ndotenv.config()\r\n\r\nReactDOM.createRoot(document.getElementById('root')).render(\r\n    <App />\r\n);\r\n\r\n"],"sourceRoot":""}